name: ELK

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: read
  pull-requests: write

jobs:
  deploy_elk:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4.2.2

      - name: Configure AWS credentials from AWS account
        uses: aws-actions/configure-aws-credentials@v4.0.3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Install kubectl
        run: |
          sudo apt-get install kubectl -y

      - name: Update kubeconfig
        run: aws eks --region ${{ secrets.AWS_REGION }} update-kubeconfig --name eks-cluster

      - name: Wait for resources to be created
        run: sleep 30

      - name: Install Helm
        run: |
          curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash

      - name: Add Elastic Helm Repo
        run: helm repo add elastic https://helm.elastic.co

      - name: Update Helm Repos
        run: helm repo update

      - name: Create and Apply Persistent Volumes for Elasticsearch
        working-directory: ./elasticsearch
        run: kubectl apply -f pv.yaml

      - name: Install Elasticsearch using Helm
        working-directory: ./elasticsearch
        run: helm install elasticsearch elastic/elasticsearch --version="8.5.1" -f values.yaml

      - name: Create and Apply Persistent Volumes for Filebeat
        working-directory: ./filebeat
        run: kubectl apply -f pv.yaml

      - name: Install Filebeat using Helm
        working-directory: ./filebeat
        run: helm install filebeat elastic/filebeat --version="8.5.1" -f values.yaml

      - name: Install Kibana using Helm
        working-directory: ./kibana
        run: helm install kibana elastic/kibana --version="8.5.1" -f values.yaml

      - name: Apply Ingress for Kibana
        working-directory: ./kibana
        run: kubectl apply -f ingress.yaml

      - name: Apply Logstash Configuration
        working-directory: ./logstash
        run: kubectl apply -f .

  notify:
    runs-on: ubuntu-latest
    needs: deploy_elk
    steps:
      - name: Check if Workflow Succeeded or Failed
        id: check_status
        run: |
          if [[ ${{ needs.deploy_elk.result }} == 'success' ]]; then
            echo "status=success" >> $GITHUB_ENV
          else
            echo "status=failure" >> $GITHUB_ENV
          fi

      - name: Send Success Email Notification
        if: ${{ env.status == 'success' }}
        uses: dawidd6/action-send-mail@v4
        with:
          server_address: smtp.gmail.com
          server_port: 587
          username: ${{ secrets.EMAIL_USERNAME }}
          password: ${{ secrets.EMAIL_PASSWORD }}
          to: 'recipient@example.com'
          from: 'sender@example.com'
          subject: 'CI/CD Pipeline Success Notification'
          body: |
            Workflow: ELK Deployment
            Triggered by: ${{ github.actor }}
            Repository: ${{ github.repository }}
            Status: SUCCESS üéâ
            All jobs passed successfully:
              - Elasticsearch Deployment: Success
              - Filebeat Deployment: Success
              - Kibana Deployment: Success
              - Logstash Configuration: Success
          secure: true

      - name: Send Failure Email Notification
        if: ${{ env.status == 'failure' }}
        uses: dawidd6/action-send-mail@v4
        with:
          server_address: smtp.gmail.com
          server_port: 587
          username: ${{ secrets.EMAIL_USERNAME }}
          password: ${{ secrets.EMAIL_PASSWORD }}
          to: 'recipient@example.com'
          from: 'sender@example.com'
          subject: 'CI/CD Pipeline Failure Notification'
          body: |
            Workflow: ELK Deployment
            Triggered by: ${{ github.actor }}
            Repository: ${{ github.repository }}
            Status: FAILURE ‚ùå
            Some jobs failed. Please check the pipeline for errors:
              - Elasticsearch Deployment: Failed
              - Filebeat Deployment: Failed
              - Kibana Deployment: Failed
              - Logstash Configuration: Failed
          secure: true
