name: ELK

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: read
  pull-requests: write



jobs:
  deploy_elk:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4.2.2

      - name: Configure AWS credentials from AWS account
        uses: aws-actions/configure-aws-credentials@v4.0.3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Install kubectl
        run: |
          sudo apt-get install kubectl -y

      - name: Update kubeconfig
        run: aws eks --region ${{ secrets.AWS_REGION }} update-kubeconfig --name eks-cluster

      - name: Wait for resources to be created
        run: sleep 30

      - name: Install Helm
        run: |
          curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash

      - name: Add Elastic Helm Repo
        run: helm repo add elastic https://helm.elastic.co

      - name: Update Helm Repos
        run: helm repo update

      - name: Create and Apply Persistent Volumes for Elasticsearch
        working-directory: ./elasticsearch
        run: kubectl apply -f pv.yaml

      - name: Install Elasticsearch using Helm
        working-directory: ./elasticsearch
        run: helm install elasticsearch elastic/elasticsearch --version="8.5.1" -f values.yaml

      - name: Create and Apply Persistent Volumes for Filebeat
        working-directory: ./filebeat
        run: kubectl apply -f pv.yaml

      - name: Install Filebeat using Helm
        working-directory: ./filebeat
        run: helm install filebeat elastic/filebeat --version="8.5.1" -f values.yaml

      - name: Install Kibana using Helm
        working-directory: ./kibana
        run: helm install kibana elastic/kibana --version="8.5.1"

      - name: Apply Ingress for Kibana
        working-directory: ./kibana
        run: kubectl apply -f ingress.yaml

      - name: Apply Logstash Configuration
        working-directory: ./logstash
        run: kubectl apply -f .


  notify:
    name: Notify on Slack
    runs-on: ubuntu-latest
    steps:
    - uses: 8398a7/action-slack@v3
      with:
        status: custom
        fields: workflow,job,commit,repo,ref,author,took
        custom_payload: |
          {
            attachments: [{
              color: '${{ job.status }}' === 'success' ? 'good' : '${{ job.status }}' === 'failure' ? 'danger' : 'warning',
              text: `${process.env.AS_WORKFLOW}\n${process.env.AS_JOB} (${process.env.AS_COMMIT}) of ${process.env.AS_REPO}@${process.env.AS_REF} by ${process.env.AS_AUTHOR} ${{ job.status }} in ${process.env.AS_TOOK}`,
            }]
          }
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
      if: always() # Pick up events even if the job fails or is canceled.